{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Downloads\\\\QuestionApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Papa from 'papaparse'; // For parsing CSV files\nimport './App.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [markedRows, setMarkedRows] = useState([]);\n  const [sortDirection, setSortDirection] = useState('asc'); // State to track sorting direction\n\n  // Function to handle file upload\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n\n    // Using PapaParse to parse the CSV file\n    Papa.parse(file, {\n      complete: result => {\n        // Adding a new property 'marked' to each row and initializing it to false\n        const newData = result.data.slice(1).map(row => ({\n          ...row,\n          marked: false\n        }));\n        setData(newData);\n      }\n    });\n  };\n\n  // Function to open Leetcode question link in a new tab\n  const openLeetCodeLink = (link, index) => {\n    window.open(link, '_blank');\n    // Marking the row as ticked\n    const newData = [...data];\n    newData[index].marked = true;\n    setMarkedRows([...markedRows, index]);\n    setData(newData);\n  };\n\n  // Function to sort data based on Difficulty column\n  const sortData = () => {\n    const sortedData = [...data];\n    if (sortDirection === 'asc') {\n      sortedData.sort((a, b) => {\n        const difficultyA = a[3];\n        const difficultyB = b[3];\n        if (difficultyA === difficultyB) return 0;\n        if (difficultyA === 'Easy') return -1;\n        if (difficultyB === 'Easy') return 1;\n        if (difficultyA === 'Medium') return -1;\n        if (difficultyB === 'Medium') return 1;\n        return 1; // 'Hard' comes last\n      });\n      setSortDirection('desc');\n    } else {\n      sortedData.sort((a, b) => {\n        const difficultyA = a[3];\n        const difficultyB = b[3];\n        if (difficultyA === difficultyB) return 0;\n        if (difficultyA === 'Hard') return -1;\n        if (difficultyB === 'Hard') return 1;\n        if (difficultyA === 'Medium') return -1;\n        if (difficultyB === 'Medium') return 1;\n        return 1; // 'Easy' comes last\n      });\n      setSortDirection('asc');\n    }\n    setData(sortedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CSV File Reader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Acceptance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: sortData,\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Frequency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Leetcode Question Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Marked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[4]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openLeetCodeLink(row[5], index),\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: markedRows.includes(index) ? '✔️' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5RCnb4gd+QVVou8ZhfA9ONvNIVE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Papa","jsxDEV","_jsxDEV","App","_s","data","setData","markedRows","setMarkedRows","sortDirection","setSortDirection","handleFileUpload","event","file","target","files","parse","complete","result","newData","slice","map","row","marked","openLeetCodeLink","link","index","window","open","sortData","sortedData","sort","a","b","difficultyA","difficultyB","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","includes","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Downloads/QuestionApp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Papa from 'papaparse'; // For parsing CSV files\r\nimport './App.css'; // Import CSS file for styling\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [markedRows, setMarkedRows] = useState([]);\r\n  const [sortDirection, setSortDirection] = useState('asc'); // State to track sorting direction\r\n\r\n  // Function to handle file upload\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    \r\n    // Using PapaParse to parse the CSV file\r\n    Papa.parse(file, {\r\n      complete: (result) => {\r\n        // Adding a new property 'marked' to each row and initializing it to false\r\n        const newData = result.data.slice(1).map(row => ({ ...row, marked: false }));\r\n        setData(newData);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Function to open Leetcode question link in a new tab\r\n  const openLeetCodeLink = (link, index) => {\r\n    window.open(link, '_blank');\r\n    // Marking the row as ticked\r\n    const newData = [...data];\r\n    newData[index].marked = true;\r\n    setMarkedRows([...markedRows, index]);\r\n    setData(newData);\r\n  };\r\n\r\n  // Function to sort data based on Difficulty column\r\n  const sortData = () => {\r\n    const sortedData = [...data];\r\n    if (sortDirection === 'asc') {\r\n      sortedData.sort((a, b) => {\r\n        const difficultyA = a[3];\r\n        const difficultyB = b[3];\r\n        if (difficultyA === difficultyB) return 0;\r\n        if (difficultyA === 'Easy') return -1;\r\n        if (difficultyB === 'Easy') return 1;\r\n        if (difficultyA === 'Medium') return -1;\r\n        if (difficultyB === 'Medium') return 1;\r\n        return 1; // 'Hard' comes last\r\n      });\r\n      setSortDirection('desc');\r\n    } else {\r\n      sortedData.sort((a, b) => {\r\n        const difficultyA = a[3];\r\n        const difficultyB = b[3];\r\n        if (difficultyA === difficultyB) return 0;\r\n        if (difficultyA === 'Hard') return -1;\r\n        if (difficultyB === 'Hard') return 1;\r\n        if (difficultyA === 'Medium') return -1;\r\n        if (difficultyB === 'Medium') return 1;\r\n        return 1; // 'Easy' comes last\r\n      });\r\n      setSortDirection('asc');\r\n    }\r\n    setData(sortedData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>CSV File Reader</h1>\r\n      <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Title</th>\r\n            <th>Acceptance</th>\r\n            <th onClick={sortData}>Difficulty</th>\r\n            <th>Frequency</th>\r\n            <th>Leetcode Question Link</th>\r\n            <th>Marked</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td>{row[0]}</td>\r\n              <td>{row[1]}</td>\r\n              <td>{row[2]}</td>\r\n              <td>{row[3]}</td>\r\n              <td>{row[4]}</td>\r\n              <td>\r\n                <button onClick={() => openLeetCodeLink(row[5], index)}>Open</button>\r\n              </td>\r\n              <td>{markedRows.includes(index) ? '✔️' : ''}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}